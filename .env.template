## This is a template for a docker-compose .env file

## The FQDN name this server will be reachable on (without http:// or https://)
SERVER_NAME=somedomain.example.com

## Email addres to use when requesting LetsEncrypt certificates.
## This will only be used by letsencrypt to notify about pending certificate
## expiration (which normally shouldn't happen).
LETSENCRYPT_EMAIL=email@example.com

## IP address/network whitelists for access to non-public parts of the service.
## Uses CIDR notation. Separate multiple entries with commas.
## Example values:
##   - 10.0.0.0/16,10.1.2.3/32
##   - 10.1.2.3/32

## Metrics whitelist
## This default value points to a raiden.network operated monitoring server.
#CIDR_ALLOW_METRICS=64.225.82.119/32

## Proxy metrics / management interface whitelist
## This default value points to a raiden.network operated monitoring server.
#CIDR_ALLOW_PROXY=64.225.82.119/32

## Number of worker processes to start, setting this to the number of CPUs is a good starting point
WORKER_COUNT=8

## Data dir location. Optional, defaults to ./data in the checkout directory.
#DATA_DIR=/data

## URL to use to fetch federation whitelist - used only for testing
#URL_KNOWN_FEDERATION_SERVERS=https://raw.githubusercontent.com/raiden-network/raiden-service-bundle/master/known_servers/known_servers.alderaan.yaml


### Services settings
## the keystore file, has to be located in ${DATA_DIR}/keystore
KEYSTORE_FILE=
PASSWORD=
ETH_RPC=

## Which development environment to use. Only set this if you know what you're doing.
#DEVELOPMENT_ENVIRONMENT=

# The pathfinding service disclaimer needs to be accepted by setting ACCEPT_SERVICES_DISCLAIMER as written below.
# Otherwise the pathfinding service won't start.
# Please make sure to read the disclaimer and only uncomment once you have read and accepted the disclaimer.
# Please read: https://github.com/raiden-network/raiden-services/blob/f4bcb9c289e093754204fe18684e4b57558ea29b/src/pathfinding_service/constants.py#L34
# PFS_ACCEPT_DISCLAIMER=TRUE

# The monitoring service disclaimer needs to be accepted by setting ACCEPT_SERVICES_DISCLAIMER as written below.
# Otherwise the monitoring service won't start.
# Please make sure to read the disclaimer and only uncomment once you have read and accepted the disclaimer.
# Please read: https://github.com/raiden-network/raiden-services/blob/f4bcb9c289e093754204fe18684e4b57558ea29b/src/monitoring_service/constants.py#L22
# MS_ACCEPT_DISCLAIMER=TRUE

## Specify the chain name/id of the Ethereum network to run Raiden on.
# Available networks:
# - mainnet
# - ropsten
# - rinkeby
# - goerli
# - kovan
# - <CHAIN_ID> use the given numeric chain id directly
## For example on the goerli testnet this would become: CHAIN_ID=goerli
CHAIN_ID=

## PFS fee, can be 0
PFS_SERVICE_FEE=100

## PFS info settings, both are shown in the client during startup
# PFS_OPERATOR=<OPERATOR_NAME>
# PFS_INFO_MESSAGE=<PFS_INFO_MESSAGE>

## Address of the ServiceRegistry contract to use
SERVICE_REGISTRY=

## Settings for COMPRESS_STATE utility
## rooms to compress: list of fully qualified room names, space separated. If
## you leave this undefined, the tool will not work.
# COMPRESS_ROOMS="#room1:homeserver #room2:homeserver #room3:homeserver"

## Log level settings, we recommend DEBUG or INFO
LOG_LEVEL=DEBUG
